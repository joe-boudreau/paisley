------------------------------------------------------------------------------------------------------------------------
# SCRIPT INSTALLATION

Usage: scripts/deployCC.sh {CHANNEL_NAME} {CC_SRC_PATH} {VERSION}
Example: scripts/deployCC.sh org-channel ../chaincode 5

------------------------------------------------------------------------------------------------------------------------
# MANUAL INSTALLATION

- create crypto materials:
    bin/cryptogen generate --config=./crypto-config.yaml
    

- create genesis block:
    bin/configtxgen -profile OneOrgOrdererGenesis -outputBlock ./channel-artifacts/genesis.block -channelID sys-channel

- create channel:
    bin/configtxgen -profile OneOrgChannel -outputCreateChannelTx ./channel-artifacts/org-channel.tx -channelID org-channel
    bin/configtxgen -profile OneOrgChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID org-channel -asOrg Org1MSP

-bring network up with docker-compose.yaml file

- set the MSP identity path to the company admin:
    export CORE_PEER_MSPCONFIGPATH=crypto-config/peerOrganizations/org1.companyABC.com/users/Admin@org1.companyABC.com/msp

- point the peer binary to the core.yaml config file:
    export FABRIC_CFG_PATH=.

- Add peers to channel:
    bin/peer channel create -o localhost:7050 -c org-channel --ordererTLSHostnameOverride orderer0.companyABC.com -f ./channel-artifacts/org-channel.tx --outputBlock ./channel-artifacts/org-channel.block --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/tlsca/tlsca.companyABC.com-cert.pem
    bin/peer channel join -b ./channel-artifacts/org-channel.block
    bin/peer channel update -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com -c org-channel -f ./channel-artifacts/Org1MSPanchors.tx --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem
        
- Generate the principal chaincode package:
    bin/peer lifecycle chaincode package principalCC.tar.gz --path ../chaincode/principal/ --lang node --label principal

- Install the chaincode on a peer:
    env variables:
        export CORE_PEER_TLS_ENABLED=true
        export CORE_PEER_LOCALMSPID="Org1MSP"
        export CORE_PEER_TLS_ROOTCERT_FILE=crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt
        export CORE_PEER_MSPCONFIGPATH=crypto-config/peerOrganizations/org1.companyABC.com/users/Admin@org1.companyABC.com/msp
        export CORE_PEER_ADDRESS=127.0.0.1:7051
        bin/peer lifecycle chaincode install principalCC.tar.gz
        
- retrieve the package ID with the following query:
    bin/peer lifecycle chaincode queryinstalled

- Add an environment variable for the package ID:
    export CC_PACKAGE_ID=principal:{{ID}}

- Approve the chaincode for the organization:
    bin/peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --channelID org-channel --name principal --version 1.0 --package-id $CC_PACKAGE_ID --sequence 1 --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem
    
- OPTIONAL: Check the chaincode commit readiness for the channel:
    bin/peer lifecycle chaincode checkcommitreadiness --channelID org-channel --name principal --version 1.0 --sequence 1 --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem --output json
        
- Commit the chaincode to the channel:
    bin/peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --channelID org-channel --name principal --version 1.0 --sequence 1 --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem --peerAddresses localhost:7051 --tlsRootCertFiles crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt
    
- Confirm the chaincode has been committed:
    bin/peer lifecycle chaincode querycommitted --channelID org-channel --name principal --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem


------------------------------------------------------------------------------------------------------------------------
# USAGE

- Create employee:
    bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem -C org-channel -n chaincode --peerAddresses localhost:7051 --tlsRootCertFiles crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt -c '{"Args":["principal-employee:create", "{\"name\": \"Joe Boudreau\", \"roles\": [\"Employee\"], \"badgeNumber\": 123456789, \"title\": \"Boss\", \"department\": \"Engineering\"}"]}'
- Get all employees:
    bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem -C org-channel -n chaincode --peerAddresses localhost:7051 --tlsRootCertFiles crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt -c '{"Args":["principal-employee:getAll"]}'
    
- Create Area:
    bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem -C org-channel -n chaincode --peerAddresses localhost:7051 --tlsRootCertFiles crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt -c '{"Args":["resource-area:create", "{\"name\":\"common-room\",\"tags\":[\"low-security\",\"common\",\"visitors-allowed\"],\"ingress\":[],\"egress\":[]}"]}'
- Get all Areas:
    bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem -C org-channel -n chaincode --peerAddresses localhost:7051 --tlsRootCertFiles crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt -c '{"Args":["resource-area:getAll"]}'

- Create Policy:
    bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem -C org-channel -n chaincode --peerAddresses localhost:7051 --tlsRootCertFiles crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt -c '{"Args":["policy:create", "{\"type\":2,\"principalRoles\":[\"Employee\"],\"resourceTags\":[\"common\"]}"]}'
- Get all Policies:
    bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer0.companyABC.com --tls true --cafile crypto-config/ordererOrganizations/companyABC.com/orderers/orderer0.companyABC.com/msp/tlscacerts/tlsca.companyABC.com-cert.pem -C org-channel -n chaincode --peerAddresses localhost:7051 --tlsRootCertFiles crypto-config/peerOrganizations/org1.companyABC.com/peers/peer0.org1.companyABC.com/tls/ca.crt -c '{"Args":["policy:getAll"]}'
------------------------------------------------------------------------------------------------------------------------
# MISC COMMANDS:
    logspout:
        scripts/monitordocker.sh paisley_network
    clear all docker volumes / containers / images:
        docker volume rm $(docker volume ls)
        docker rm -f $(docker ps -aq)
        docker rmi -f $(docker images -q)

